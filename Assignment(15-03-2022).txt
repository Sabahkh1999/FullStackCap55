Nikitha M R
CAPG48LSRB302


1)What is the difference between c and java access specifiers?
Ans: There is no access specifires in c  becuase it not object oriented programming whereas there are four access modifiers in java(public,private,default,protected)

2)who is providing the extra functions is java?
Java functional interface can be implemented by a Java Lambda Expression

3)Why string is passed in main method?
Ans: Because everything you pass as argument to your program on the command line can be represented as a string. Not as doubles or integers.

4)What happens if a final keyword is applied on class and function?
Ans: If we initialize a variable with the final keyword, then we cannot modify its value.

5)what are other responsibilities of jvm?
Ans)JVM performs byte-code interpretation, garbage collection, exception handling, thread management, 
initialization of variables, and type definition.
The JVM has two primary functions: to allow Java programs to run on any device or operating system
and to manage and optimize program memory.

6)Why string is passed in main method?
Ans)Because by passing String arrays , we can pass all the necessary parameters like options/arguments related to the program in the form of String easily. 
There can be several parameters! Also, all the other datatypes can be easily converted from String!

7)Why only jvm gives default constructor?
Ans)The Java compiler provides a default constructor if you don't have any constructor in a class. 
The method is not provided by the compiler in any case.
 what is difference b/w constructor and function in the class?

Constructor :-
Constructor is a block of code that initializes a newly created object.	
Constructor has the same name as class name.	
Constructor has no return type not even void.

Function :-
Function requires a valid return type.
Function is a group of statements that can be called at any point in the program using its name to perform a specific task.
Function should have a different name than class name.

example you can see that I have created constructor pqr which is on the name of class but i have created function with the name of sum().


public class pqr
{
public int p, q;
public pqr()
    {
        p = 10;
        q = 20;
    }
    public int sum()
    {
        return (p + q);
    }
}

8)Is java call by reference or call by value?
->There is only call by value in java, not call by reference. If we call a method passing a value, it is known as call by value.
 The changes being done in the called method, is not affected in the calling method

9)Difference b/w java 8 and java7?
->*The codename for java 7 is dolphin and the codeman for java 8 is spider
  *Some of the features of Java 7 are Handling of Multiple exceptions,
   Updated class-loader architecture, Enhanced type inference, Updated Rowset 1.1 and JDBC 4.1, Enhanced Managed Beans, Automatic resource management in try-statement, Compressed 64-bit pointers, JVM support and so much more
  *Whereas Some of the features of Java 8 are Lambda Expressions, Interface default and 
   Static Methods, Unsigned Integer Arithmetic, Concurrent API enhancements, Null Reference Template, New JavaScript Engine, Nashorn, New and improved Stream API, Withdrawal of permanent generation and so much more.
  *Java 7 was developed by Oracle Corporation on Jan 27, 2010 whereas java 8 was developed by Oracle Corporation on Mar 18, 2014
  *Main upgrade for java 7 is JVM support for dynamically-typed languages  whereas for java 8
  *Java 7 is supported on windows XP whereas java 8 is not supported on Windows XP but forced installation can be done

10)When and why collections were added?
Ans)Increases program speed and quality: The Collections Framework provides high-performance, high-quality implementations of useful data structures and algorithms. The various implementations of each interface are interchangeable, 
so programs can be easily tuned by switching collection implementations.

11)What are functions in java?
Ans :function without  parameter and without retun type
     function without parameter and with retun type
     function with parameter and without retun type
     function without parameter and with  retun type