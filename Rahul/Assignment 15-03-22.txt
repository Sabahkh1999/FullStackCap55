1.Why only ‘ Strings ’ is accepted in “ public static void main(Strings args[]) ” ?
Here we are defining a String array to pass arguments at command line. args is the variable name of the String array.

2.Why is there a false in this code….
I think gave Boolean as a method type so no matter what parameters we will send we should return  it as boolean type. return type is given that is the reason why the output have false in it

3.Diff btw C a.s and JAVA a.s
There is no access modifiers in c
but there is a.s in java

4.What is the difference Between Constructor and Normal Function
Constructor is used to initialize an object whereas method is used to exhibits functionality of an object.
Constructors are invoked implicitly whereas methods are invoked explicitly.
Constructor does not return any value where the method may/may not return a value.

5.Responsibilities of JVM
𝐓𝐡𝐞 𝐫𝐨𝐥𝐞 𝐨𝐟 𝐉𝐕𝐌 𝐡𝐚𝐬 𝐭𝐰𝐨 𝐦𝐨𝐦𝐞𝐧𝐭𝐨𝐮𝐬 𝐜𝐚𝐩𝐚𝐜𝐢𝐭𝐢𝐞𝐬:
•	To permit Java programs to run on operating systems and any device.
•	To manage and enhance program memory.
𝐉𝐕𝐌 𝐩𝐞𝐫𝐟𝐨𝐫𝐦𝐬 𝐭𝐡𝐞 𝐟𝐨𝐥𝐥𝐨𝐰𝐢𝐧𝐠 𝐟𝐮𝐧𝐜𝐭𝐢𝐨𝐧:
•	Verifies code
•	Executes code
•	Provides runtime environment
•	Loads code

6.why JVM gives Default Constructor
The Java compiler provides a default constructor if you don't have any constructor in a class. The method is not provided by the compiler in any case. The constructor name must be same as the class name.

7.Does JAVA follow Pass by Value or Pass by Reference ?
Java uses only pass by value. It creates a copy of references and pass them as value to the methods.

8.What happens when Final keyword is applied on Function
And what happens when applied on Class 

When we apply the final keyword to a class, then that class cannot be subclassed. When we apply it to a method, then that method cannot be overridden

9.Function without parameters an without return type

public class par1 {

	public static void main(String[] args) {
		ex1 obj1=new ex1();
		obj1.add();

	}

}

class ex1{
	void  add() {
		int a=1;
		int b=4;
		System.out.println(a+b);
	}
	
}

10.Function without parameters an with return type

public class par2 {

	public static void main(String[] args) {
		ex2 obj2=new ex2();
		System.out.println(obj2.multiply());

	}

}
class ex2{
	
	int multiply() {
		int a=4;
		int b=5;
		return a*b;
	}
}

11.Function with parameters an without return type

public class par3 {

	public static void main(String[] args) {
		ex3 obj3=new ex3();
	obj3.add(6,7);

	}

}

class ex3{
	
	void add(int a,int b) {
		
		System.out.println(a+b);
	}
}

12.Function with parameters an with return type

public class par4 {

	public static void main(String[] args) {
		ex4 obj4=new ex4();
		System.out.println(obj4.multiply(4, 3));
		System.out.println(obj4.names("Rahul "));
		

	}

}

class ex4{
	String nam="Raj";
	
	int multiply(int a,int b) {
		
		return a*b;
		
	}
	
	String names(String name) {
		String n=name+nam;
		return n;
		
	}
	
